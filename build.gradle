buildscript {
    ext {
        springBootVersion = '2.4.3'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://dl.bintray.com/americanexpress/maven/' }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://repo.spring.io/plugins-release/" }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

project.ext.set("profiles", "prod")

allprojects {

    group = 'com.laplace.api'
    version = '1.0.0'

    apply plugin: 'idea'
    apply plugin: 'maven'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://dl.bintray.com/americanexpress/maven/' }
        maven { url("https://plugins.gradle.org/m2/") }
        maven { url "http://repo.spring.io/plugins-release/" }
    }
}

subprojects {

    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    compileJava {options.encoding = "UTF-8"}
    compileTestJava {options.encoding = "UTF-8"}

    sourceCompatibility = 11
    targetCompatibility = 11

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
        }

        dependencies {
            dependency group: 'junit', name: 'junit', version: '4.12'
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.6'
        annotationProcessor 'org.projectlombok:lombok:1.18.6'
    }
}


task copyWars(type: Copy) {
    dependsOn subprojects.build

    def wars = []
    subprojects.each {
        exclude "*.jar"
        exclude "*common*"
        wars += it.libsDir
    }
    from wars
    into 'build/libs'
}

task archive(type: Zip) {
    dependsOn copyWars
    archiveName = "${project.name}-${version}.zip"
    destinationDir = file('build/dist')
    from 'build/libs'
    exclude "*.zip"
    exclude "*common*"
    includeEmptyDirs = false
}

assemble.finalizedBy archive



